{
  "sourceType" : "module",
  "body" : [ {
    "specifiers" : [ {
      "local" : {
        "name" : "Geometry",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../geom/Geometry'",
      "raw" : "'../../geom/Geometry'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "CoordinateFilter",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../geom/CoordinateFilter'",
      "raw" : "'../../geom/CoordinateFilter'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "OrdinateFormat",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../io/OrdinateFormat'",
      "raw" : "'../../io/OrdinateFormat'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "MathUtil",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../math/MathUtil'",
      "raw" : "'../../math/MathUtil'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "PrecisionModel",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../geom/PrecisionModel'",
      "raw" : "'../../geom/PrecisionModel'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "declaration" : {
      "id" : {
        "name" : "PrecisionUtil",
        "type" : "Identifier"
      },
      "body" : {
        "body" : [ {
          "key" : {
            "name" : "robustScale",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "arguments.length",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : 1,
                    "raw" : "1",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "a",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "object" : {
                          "name" : "arguments",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "value" : 0,
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "declarations" : [ {
                      "id" : {
                        "name" : "inherentScale",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "name" : "PrecisionUtil",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "inherentScale",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "a",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "declarations" : [ {
                      "id" : {
                        "name" : "safeScale",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "name" : "PrecisionUtil",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "safeScale",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "a",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "argument" : {
                      "callee" : {
                        "object" : {
                          "name" : "PrecisionUtil",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "robustScale",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "inherentScale",
                        "type" : "Identifier"
                      }, {
                        "name" : "safeScale",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ReturnStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "test" : {
                    "operator" : "===",
                    "left" : {
                      "name" : "arguments.length",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "value" : 2,
                      "raw" : "2",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "consequent" : {
                    "body" : [ {
                      "test" : {
                        "operator" : "&&",
                        "left" : {
                          "operator" : "instanceof",
                          "left" : {
                            "object" : {
                              "name" : "arguments",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "value" : 0,
                              "raw" : "0",
                              "type" : "Literal"
                            },
                            "computed" : true,
                            "type" : "MemberExpression"
                          },
                          "right" : {
                            "name" : "Geometry",
                            "type" : "Identifier"
                          },
                          "type" : "BinaryExpression"
                        },
                        "right" : {
                          "operator" : "instanceof",
                          "left" : {
                            "object" : {
                              "name" : "arguments",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "value" : 1,
                              "raw" : "1",
                              "type" : "Literal"
                            },
                            "computed" : true,
                            "type" : "MemberExpression"
                          },
                          "right" : {
                            "name" : "Geometry",
                            "type" : "Identifier"
                          },
                          "type" : "BinaryExpression"
                        },
                        "type" : "LogicalExpression"
                      },
                      "consequent" : {
                        "body" : [ {
                          "declarations" : [ {
                            "id" : {
                              "name" : "a",
                              "type" : "Identifier"
                            },
                            "init" : {
                              "object" : {
                                "name" : "arguments",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "value" : 0,
                                "raw" : "0",
                                "type" : "Literal"
                              },
                              "computed" : true,
                              "type" : "MemberExpression"
                            },
                            "type" : "VariableDeclarator"
                          }, {
                            "id" : {
                              "name" : "b",
                              "type" : "Identifier"
                            },
                            "init" : {
                              "object" : {
                                "name" : "arguments",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "value" : 1,
                                "raw" : "1",
                                "type" : "Literal"
                              },
                              "computed" : true,
                              "type" : "MemberExpression"
                            },
                            "type" : "VariableDeclarator"
                          } ],
                          "kind" : "let",
                          "type" : "VariableDeclaration"
                        }, {
                          "declarations" : [ {
                            "id" : {
                              "name" : "inherentScale",
                              "type" : "Identifier"
                            },
                            "init" : {
                              "callee" : {
                                "object" : {
                                  "name" : "PrecisionUtil",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "inherentScale",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ {
                                "name" : "a",
                                "type" : "Identifier"
                              }, {
                                "name" : "b",
                                "type" : "Identifier"
                              } ],
                              "type" : "CallExpression"
                            },
                            "type" : "VariableDeclarator"
                          } ],
                          "kind" : "let",
                          "type" : "VariableDeclaration"
                        }, {
                          "declarations" : [ {
                            "id" : {
                              "name" : "safeScale",
                              "type" : "Identifier"
                            },
                            "init" : {
                              "callee" : {
                                "object" : {
                                  "name" : "PrecisionUtil",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "safeScale",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ {
                                "name" : "a",
                                "type" : "Identifier"
                              }, {
                                "name" : "b",
                                "type" : "Identifier"
                              } ],
                              "type" : "CallExpression"
                            },
                            "type" : "VariableDeclarator"
                          } ],
                          "kind" : "let",
                          "type" : "VariableDeclaration"
                        }, {
                          "argument" : {
                            "callee" : {
                              "object" : {
                                "name" : "PrecisionUtil",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "robustScale",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "inherentScale",
                              "type" : "Identifier"
                            }, {
                              "name" : "safeScale",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "ReturnStatement"
                        } ],
                        "type" : "BlockStatement"
                      },
                      "alternate" : {
                        "test" : {
                          "operator" : "&&",
                          "left" : {
                            "operator" : "===",
                            "left" : {
                              "operator" : "typeof",
                              "prefix" : true,
                              "argument" : {
                                "object" : {
                                  "name" : "arguments",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "value" : 0,
                                  "raw" : "0",
                                  "type" : "Literal"
                                },
                                "computed" : true,
                                "type" : "MemberExpression"
                              },
                              "type" : "UnaryExpression"
                            },
                            "right" : {
                              "value" : "number",
                              "raw" : "\"number\"",
                              "type" : "Literal"
                            },
                            "type" : "BinaryExpression"
                          },
                          "right" : {
                            "operator" : "===",
                            "left" : {
                              "operator" : "typeof",
                              "prefix" : true,
                              "argument" : {
                                "object" : {
                                  "name" : "arguments",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "value" : 1,
                                  "raw" : "1",
                                  "type" : "Literal"
                                },
                                "computed" : true,
                                "type" : "MemberExpression"
                              },
                              "type" : "UnaryExpression"
                            },
                            "right" : {
                              "value" : "number",
                              "raw" : "\"number\"",
                              "type" : "Literal"
                            },
                            "type" : "BinaryExpression"
                          },
                          "type" : "LogicalExpression"
                        },
                        "consequent" : {
                          "body" : [ {
                            "declarations" : [ {
                              "id" : {
                                "name" : "inherentScale",
                                "type" : "Identifier"
                              },
                              "init" : {
                                "object" : {
                                  "name" : "arguments",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "value" : 0,
                                  "raw" : "0",
                                  "type" : "Literal"
                                },
                                "computed" : true,
                                "type" : "MemberExpression"
                              },
                              "type" : "VariableDeclarator"
                            }, {
                              "id" : {
                                "name" : "safeScale",
                                "type" : "Identifier"
                              },
                              "init" : {
                                "object" : {
                                  "name" : "arguments",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "value" : 1,
                                  "raw" : "1",
                                  "type" : "Literal"
                                },
                                "computed" : true,
                                "type" : "MemberExpression"
                              },
                              "type" : "VariableDeclarator"
                            } ],
                            "kind" : "let",
                            "type" : "VariableDeclaration"
                          }, {
                            "test" : {
                              "operator" : "<=",
                              "left" : {
                                "name" : "inherentScale",
                                "type" : "Identifier"
                              },
                              "right" : {
                                "name" : "safeScale",
                                "type" : "Identifier"
                              },
                              "type" : "BinaryExpression"
                            },
                            "consequent" : {
                              "body" : [ {
                                "argument" : {
                                  "name" : "inherentScale",
                                  "type" : "Identifier"
                                },
                                "type" : "ReturnStatement"
                              } ],
                              "type" : "BlockStatement"
                            },
                            "alternate" : null,
                            "type" : "IfStatement"
                          }, {
                            "argument" : {
                              "name" : "safeScale",
                              "type" : "Identifier"
                            },
                            "type" : "ReturnStatement"
                          } ],
                          "type" : "BlockStatement"
                        },
                        "alternate" : null,
                        "type" : "IfStatement"
                      },
                      "type" : "IfStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "alternate" : null,
                  "type" : "IfStatement"
                },
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "precisionScale",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "value",
              "type" : "Identifier"
            }, {
              "name" : "precisionDigits",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "magnitude",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "Math",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "trunc",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "operator" : "+",
                      "left" : {
                        "operator" : "/",
                        "left" : {
                          "callee" : {
                            "object" : {
                              "name" : "Math",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "log",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "name" : "value",
                            "type" : "Identifier"
                          } ],
                          "type" : "CallExpression"
                        },
                        "right" : {
                          "callee" : {
                            "object" : {
                              "name" : "Math",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "log",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "value" : "10",
                            "raw" : "10",
                            "type" : "Literal"
                          } ],
                          "type" : "CallExpression"
                        },
                        "type" : "BinaryExpression"
                      },
                      "right" : {
                        "value" : "1.0",
                        "raw" : "1.0",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "precDigits",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "-",
                    "left" : {
                      "name" : "precisionDigits",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "name" : "magnitude",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "scaleFactor",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "Math",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "pow",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "value" : "10.0",
                      "raw" : "10.0",
                      "type" : "Literal"
                    }, {
                      "name" : "precDigits",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "argument" : {
                  "name" : "scaleFactor",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "safeScale",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "arguments.length",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : 1,
                    "raw" : "1",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "test" : {
                      "operator" : "===",
                      "left" : {
                        "operator" : "typeof",
                        "prefix" : true,
                        "argument" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 0,
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "UnaryExpression"
                      },
                      "right" : {
                        "value" : "number",
                        "raw" : "\"number\"",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "consequent" : {
                      "body" : [ {
                        "declarations" : [ {
                          "id" : {
                            "name" : "value",
                            "type" : "Identifier"
                          },
                          "init" : {
                            "object" : {
                              "name" : "arguments",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "value" : 0,
                              "raw" : "0",
                              "type" : "Literal"
                            },
                            "computed" : true,
                            "type" : "MemberExpression"
                          },
                          "type" : "VariableDeclarator"
                        } ],
                        "kind" : "let",
                        "type" : "VariableDeclaration"
                      }, {
                        "argument" : {
                          "callee" : {
                            "object" : {
                              "name" : "PrecisionUtil",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "precisionScale",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "name" : "value",
                            "type" : "Identifier"
                          }, {
                            "object" : {
                              "name" : "PrecisionUtil",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "MAX_ROBUST_DP_DIGITS",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          } ],
                          "type" : "CallExpression"
                        },
                        "type" : "ReturnStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "alternate" : {
                      "test" : {
                        "operator" : "instanceof",
                        "left" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 0,
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "right" : {
                          "name" : "Geometry",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      },
                      "consequent" : {
                        "body" : [ {
                          "declarations" : [ {
                            "id" : {
                              "name" : "geom",
                              "type" : "Identifier"
                            },
                            "init" : {
                              "object" : {
                                "name" : "arguments",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "value" : 0,
                                "raw" : "0",
                                "type" : "Literal"
                              },
                              "computed" : true,
                              "type" : "MemberExpression"
                            },
                            "type" : "VariableDeclarator"
                          } ],
                          "kind" : "let",
                          "type" : "VariableDeclaration"
                        }, {
                          "argument" : {
                            "callee" : {
                              "object" : {
                                "name" : "PrecisionUtil",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "safeScale",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "callee" : {
                                "object" : {
                                  "name" : "PrecisionUtil",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "maxBoundMagnitude",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ {
                                "callee" : {
                                  "object" : {
                                    "name" : "geom",
                                    "type" : "Identifier"
                                  },
                                  "property" : {
                                    "name" : "getEnvelopeInternal",
                                    "type" : "Identifier"
                                  },
                                  "computed" : false,
                                  "type" : "MemberExpression"
                                },
                                "arguments" : [ ],
                                "type" : "CallExpression"
                              } ],
                              "type" : "CallExpression"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "ReturnStatement"
                        } ],
                        "type" : "BlockStatement"
                      },
                      "alternate" : null,
                      "type" : "IfStatement"
                    },
                    "type" : "IfStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "test" : {
                    "operator" : "===",
                    "left" : {
                      "name" : "arguments.length",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "value" : 2,
                      "raw" : "2",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "consequent" : {
                    "body" : [ {
                      "declarations" : [ {
                        "id" : {
                          "name" : "a",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 0,
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      }, {
                        "id" : {
                          "name" : "b",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 1,
                            "raw" : "1",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "declarations" : [ {
                        "id" : {
                          "name" : "maxBnd",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "callee" : {
                            "object" : {
                              "name" : "PrecisionUtil",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "maxBoundMagnitude",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "callee" : {
                              "object" : {
                                "name" : "a",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "getEnvelopeInternal",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ ],
                            "type" : "CallExpression"
                          } ],
                          "type" : "CallExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "test" : {
                        "operator" : "!==",
                        "left" : {
                          "name" : "b",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : null,
                          "raw" : "null",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "consequent" : {
                        "body" : [ {
                          "declarations" : [ {
                            "id" : {
                              "name" : "maxBndB",
                              "type" : "Identifier"
                            },
                            "init" : {
                              "callee" : {
                                "object" : {
                                  "name" : "PrecisionUtil",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "maxBoundMagnitude",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ {
                                "callee" : {
                                  "object" : {
                                    "name" : "b",
                                    "type" : "Identifier"
                                  },
                                  "property" : {
                                    "name" : "getEnvelopeInternal",
                                    "type" : "Identifier"
                                  },
                                  "computed" : false,
                                  "type" : "MemberExpression"
                                },
                                "arguments" : [ ],
                                "type" : "CallExpression"
                              } ],
                              "type" : "CallExpression"
                            },
                            "type" : "VariableDeclarator"
                          } ],
                          "kind" : "let",
                          "type" : "VariableDeclaration"
                        }, {
                          "expression" : {
                            "operator" : "=",
                            "left" : {
                              "name" : "maxBnd",
                              "type" : "Identifier"
                            },
                            "right" : {
                              "callee" : {
                                "object" : {
                                  "name" : "Math",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "max",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ {
                                "name" : "maxBnd",
                                "type" : "Identifier"
                              }, {
                                "name" : "maxBndB",
                                "type" : "Identifier"
                              } ],
                              "type" : "CallExpression"
                            },
                            "type" : "AssignmentExpression"
                          },
                          "type" : "ExpressionStatement"
                        } ],
                        "type" : "BlockStatement"
                      },
                      "alternate" : null,
                      "type" : "IfStatement"
                    }, {
                      "declarations" : [ {
                        "id" : {
                          "name" : "scale",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "callee" : {
                            "object" : {
                              "name" : "PrecisionUtil",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "safeScale",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "name" : "maxBnd",
                            "type" : "Identifier"
                          } ],
                          "type" : "CallExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "argument" : {
                        "name" : "scale",
                        "type" : "Identifier"
                      },
                      "type" : "ReturnStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "alternate" : null,
                  "type" : "IfStatement"
                },
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "inherentScale",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "arguments.length",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : 1,
                    "raw" : "1",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "test" : {
                      "operator" : "===",
                      "left" : {
                        "operator" : "typeof",
                        "prefix" : true,
                        "argument" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 0,
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "UnaryExpression"
                      },
                      "right" : {
                        "value" : "number",
                        "raw" : "\"number\"",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "consequent" : {
                      "body" : [ {
                        "declarations" : [ {
                          "id" : {
                            "name" : "value",
                            "type" : "Identifier"
                          },
                          "init" : {
                            "object" : {
                              "name" : "arguments",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "value" : 0,
                              "raw" : "0",
                              "type" : "Literal"
                            },
                            "computed" : true,
                            "type" : "MemberExpression"
                          },
                          "type" : "VariableDeclarator"
                        } ],
                        "kind" : "let",
                        "type" : "VariableDeclaration"
                      }, {
                        "declarations" : [ {
                          "id" : {
                            "name" : "numDec",
                            "type" : "Identifier"
                          },
                          "init" : {
                            "callee" : {
                              "object" : {
                                "name" : "PrecisionUtil",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "numberOfDecimals",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "value",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "VariableDeclarator"
                        } ],
                        "kind" : "let",
                        "type" : "VariableDeclaration"
                      }, {
                        "declarations" : [ {
                          "id" : {
                            "name" : "scaleFactor",
                            "type" : "Identifier"
                          },
                          "init" : {
                            "callee" : {
                              "object" : {
                                "name" : "Math",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "pow",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "value" : "10.0",
                              "raw" : "10.0",
                              "type" : "Literal"
                            }, {
                              "name" : "numDec",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "VariableDeclarator"
                        } ],
                        "kind" : "let",
                        "type" : "VariableDeclaration"
                      }, {
                        "argument" : {
                          "name" : "scaleFactor",
                          "type" : "Identifier"
                        },
                        "type" : "ReturnStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "alternate" : {
                      "test" : {
                        "operator" : "instanceof",
                        "left" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 0,
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "right" : {
                          "name" : "Geometry",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      },
                      "consequent" : {
                        "body" : [ {
                          "declarations" : [ {
                            "id" : {
                              "name" : "geom",
                              "type" : "Identifier"
                            },
                            "init" : {
                              "object" : {
                                "name" : "arguments",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "value" : 0,
                                "raw" : "0",
                                "type" : "Literal"
                              },
                              "computed" : true,
                              "type" : "MemberExpression"
                            },
                            "type" : "VariableDeclarator"
                          } ],
                          "kind" : "let",
                          "type" : "VariableDeclaration"
                        }, {
                          "declarations" : [ {
                            "id" : {
                              "name" : "scaleFilter",
                              "type" : "Identifier"
                            },
                            "init" : {
                              "callee" : {
                                "name" : "InherentScaleFilter",
                                "type" : "Identifier"
                              },
                              "arguments" : [ ],
                              "type" : "NewExpression"
                            },
                            "type" : "VariableDeclarator"
                          } ],
                          "kind" : "let",
                          "type" : "VariableDeclaration"
                        }, {
                          "expression" : {
                            "callee" : {
                              "object" : {
                                "name" : "geom",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "apply",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "scaleFilter",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "ExpressionStatement"
                        }, {
                          "argument" : {
                            "callee" : {
                              "object" : {
                                "name" : "scaleFilter",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "getScale",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ ],
                            "type" : "CallExpression"
                          },
                          "type" : "ReturnStatement"
                        } ],
                        "type" : "BlockStatement"
                      },
                      "alternate" : null,
                      "type" : "IfStatement"
                    },
                    "type" : "IfStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "test" : {
                    "operator" : "===",
                    "left" : {
                      "name" : "arguments.length",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "value" : 2,
                      "raw" : "2",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "consequent" : {
                    "body" : [ {
                      "declarations" : [ {
                        "id" : {
                          "name" : "a",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 0,
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      }, {
                        "id" : {
                          "name" : "b",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 1,
                            "raw" : "1",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "declarations" : [ {
                        "id" : {
                          "name" : "scale",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "callee" : {
                            "object" : {
                              "name" : "PrecisionUtil",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "inherentScale",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "name" : "a",
                            "type" : "Identifier"
                          } ],
                          "type" : "CallExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "test" : {
                        "operator" : "!==",
                        "left" : {
                          "name" : "b",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : null,
                          "raw" : "null",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "consequent" : {
                        "body" : [ {
                          "declarations" : [ {
                            "id" : {
                              "name" : "scaleB",
                              "type" : "Identifier"
                            },
                            "init" : {
                              "callee" : {
                                "object" : {
                                  "name" : "PrecisionUtil",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "inherentScale",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ {
                                "name" : "b",
                                "type" : "Identifier"
                              } ],
                              "type" : "CallExpression"
                            },
                            "type" : "VariableDeclarator"
                          } ],
                          "kind" : "let",
                          "type" : "VariableDeclaration"
                        }, {
                          "expression" : {
                            "operator" : "=",
                            "left" : {
                              "name" : "scale",
                              "type" : "Identifier"
                            },
                            "right" : {
                              "callee" : {
                                "object" : {
                                  "name" : "Math",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "max",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ {
                                "name" : "scale",
                                "type" : "Identifier"
                              }, {
                                "name" : "scaleB",
                                "type" : "Identifier"
                              } ],
                              "type" : "CallExpression"
                            },
                            "type" : "AssignmentExpression"
                          },
                          "type" : "ExpressionStatement"
                        } ],
                        "type" : "BlockStatement"
                      },
                      "alternate" : null,
                      "type" : "IfStatement"
                    }, {
                      "argument" : {
                        "name" : "scale",
                        "type" : "Identifier"
                      },
                      "type" : "ReturnStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "alternate" : null,
                  "type" : "IfStatement"
                },
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "numberOfDecimals",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "value",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "s",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "object" : {
                          "name" : "OrdinateFormat",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "DEFAULT",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "property" : {
                        "name" : "format",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "value",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "callee" : {
                    "object" : {
                      "name" : "s",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "endsWith",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "value" : ".0",
                    "raw" : "\".0\"",
                    "type" : "Literal"
                  } ],
                  "type" : "CallExpression"
                },
                "consequent" : {
                  "argument" : {
                    "value" : "0",
                    "raw" : "0",
                    "type" : "Literal"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "len",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "object" : {
                      "name" : "s",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "length",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "decIndex",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "s",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "indexOf",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "value" : "'.'",
                      "raw" : "'.'",
                      "type" : "Literal"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "<=",
                  "left" : {
                    "name" : "decIndex",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : "0",
                    "raw" : "0",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "value" : "0",
                    "raw" : "0",
                    "type" : "Literal"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "operator" : "-",
                  "left" : {
                    "operator" : "-",
                    "left" : {
                      "name" : "len",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "name" : "decIndex",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "right" : {
                    "value" : "1",
                    "raw" : "1",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "maxBoundMagnitude",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "env",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "callee" : {
                    "object" : {
                      "name" : "MathUtil",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "max",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "callee" : {
                      "object" : {
                        "name" : "Math",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "abs",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "callee" : {
                        "object" : {
                          "name" : "env",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getMaxX",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    } ],
                    "type" : "CallExpression"
                  }, {
                    "callee" : {
                      "object" : {
                        "name" : "Math",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "abs",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "callee" : {
                        "object" : {
                          "name" : "env",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getMaxY",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    } ],
                    "type" : "CallExpression"
                  }, {
                    "callee" : {
                      "object" : {
                        "name" : "Math",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "abs",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "callee" : {
                        "object" : {
                          "name" : "env",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getMinX",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    } ],
                    "type" : "CallExpression"
                  }, {
                    "callee" : {
                      "object" : {
                        "name" : "Math",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "abs",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "callee" : {
                        "object" : {
                          "name" : "env",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getMinY",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    } ],
                    "type" : "CallExpression"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "robustPM",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "arguments.length",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : 1,
                    "raw" : "1",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "a",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "object" : {
                          "name" : "arguments",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "value" : 0,
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "declarations" : [ {
                      "id" : {
                        "name" : "scale",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "name" : "PrecisionUtil",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "robustScale",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "a",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "argument" : {
                      "callee" : {
                        "name" : "PrecisionModel",
                        "type" : "Identifier"
                      },
                      "arguments" : [ {
                        "name" : "scale",
                        "type" : "Identifier"
                      } ],
                      "type" : "NewExpression"
                    },
                    "type" : "ReturnStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "test" : {
                    "operator" : "===",
                    "left" : {
                      "name" : "arguments.length",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "value" : 2,
                      "raw" : "2",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "consequent" : {
                    "body" : [ {
                      "declarations" : [ {
                        "id" : {
                          "name" : "a",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 0,
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      }, {
                        "id" : {
                          "name" : "b",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 1,
                            "raw" : "1",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "declarations" : [ {
                        "id" : {
                          "name" : "scale",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "callee" : {
                            "object" : {
                              "name" : "PrecisionUtil",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "robustScale",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "name" : "a",
                            "type" : "Identifier"
                          }, {
                            "name" : "b",
                            "type" : "Identifier"
                          } ],
                          "type" : "CallExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "argument" : {
                        "callee" : {
                          "name" : "PrecisionModel",
                          "type" : "Identifier"
                        },
                        "arguments" : [ {
                          "name" : "scale",
                          "type" : "Identifier"
                        } ],
                        "type" : "NewExpression"
                      },
                      "type" : "ReturnStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "alternate" : null,
                  "type" : "IfStatement"
                },
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        } ],
        "type" : "ClassBody"
      },
      "superClass" : null,
      "type" : "ClassDeclaration"
    },
    "type" : "ExportDefaultDeclaration"
  }, {
    "id" : {
      "name" : "InherentScaleFilter",
      "type" : "Identifier"
    },
    "body" : {
      "body" : [ {
        "key" : {
          "name" : "constructor",
          "type" : "Identifier"
        },
        "value" : {
          "params" : null,
          "body" : {
            "body" : [ {
              "expression" : {
                "callee" : {
                  "object" : {
                    "name" : "InherentScaleFilter",
                    "type" : "Identifier"
                  },
                  "property" : {
                    "object" : {
                      "name" : "constructor_",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "apply",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "arguments" : [ {
                  "type" : "ThisExpression"
                }, {
                  "name" : "arguments",
                  "type" : "Identifier"
                } ],
                "type" : "CallExpression"
              },
              "type" : "ExpressionStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "constructor",
        "computed" : false,
        "static" : false,
        "type" : "MethodDefinition"
      }, {
        "key" : {
          "name" : "constructor_",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ ],
          "body" : {
            "body" : [ {
              "expression" : {
                "operator" : "=",
                "left" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_scale",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "right" : {
                  "value" : "0",
                  "raw" : "0",
                  "type" : "Literal"
                },
                "type" : "AssignmentExpression"
              },
              "type" : "ExpressionStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "method",
        "computed" : false,
        "static" : true,
        "type" : "MethodDefinition"
      }, {
        "key" : {
          "name" : "filter",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ {
            "name" : "coord",
            "type" : "Identifier"
          } ],
          "body" : {
            "body" : [ {
              "expression" : {
                "callee" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "updateScaleMax",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "arguments" : [ {
                  "callee" : {
                    "object" : {
                      "name" : "coord",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "getX",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                } ],
                "type" : "CallExpression"
              },
              "type" : "ExpressionStatement"
            }, {
              "expression" : {
                "callee" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "updateScaleMax",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "arguments" : [ {
                  "callee" : {
                    "object" : {
                      "name" : "coord",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "getY",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                } ],
                "type" : "CallExpression"
              },
              "type" : "ExpressionStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "method",
        "computed" : false,
        "static" : false,
        "type" : "MethodDefinition"
      }, {
        "key" : {
          "name" : "getScale",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ ],
          "body" : {
            "body" : [ {
              "argument" : {
                "object" : {
                  "type" : "ThisExpression"
                },
                "property" : {
                  "name" : "_scale",
                  "type" : "Identifier"
                },
                "computed" : false,
                "type" : "MemberExpression"
              },
              "type" : "ReturnStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "method",
        "computed" : false,
        "static" : false,
        "type" : "MethodDefinition"
      }, {
        "key" : {
          "name" : "updateScaleMax",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ {
            "name" : "value",
            "type" : "Identifier"
          } ],
          "body" : {
            "body" : [ {
              "declarations" : [ {
                "id" : {
                  "name" : "scaleVal",
                  "type" : "Identifier"
                },
                "init" : {
                  "callee" : {
                    "object" : {
                      "name" : "PrecisionUtil",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "inherentScale",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "value",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "VariableDeclarator"
              } ],
              "kind" : "let",
              "type" : "VariableDeclaration"
            }, {
              "test" : {
                "operator" : ">",
                "left" : {
                  "name" : "scaleVal",
                  "type" : "Identifier"
                },
                "right" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_scale",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "type" : "BinaryExpression"
              },
              "consequent" : {
                "body" : [ {
                  "expression" : {
                    "operator" : "=",
                    "left" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_scale",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "right" : {
                      "name" : "scaleVal",
                      "type" : "Identifier"
                    },
                    "type" : "AssignmentExpression"
                  },
                  "type" : "ExpressionStatement"
                } ],
                "type" : "BlockStatement"
              },
              "alternate" : null,
              "type" : "IfStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "method",
        "computed" : false,
        "static" : false,
        "type" : "MethodDefinition"
      }, {
        "key" : {
          "name" : "interfaces_",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ ],
          "body" : {
            "body" : [ {
              "argument" : {
                "elements" : [ {
                  "name" : "CoordinateFilter",
                  "type" : "Identifier"
                } ],
                "type" : "ArrayExpression"
              },
              "type" : "ReturnStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "get",
        "computed" : false,
        "static" : false,
        "type" : "MethodDefinition"
      } ],
      "type" : "ClassBody"
    },
    "superClass" : null,
    "type" : "ClassDeclaration"
  }, {
    "expression" : {
      "operator" : "=",
      "left" : {
        "object" : {
          "name" : "PrecisionUtil",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "InherentScaleFilter",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "right" : {
        "name" : "InherentScaleFilter",
        "type" : "Identifier"
      },
      "type" : "AssignmentExpression"
    },
    "type" : "ExpressionStatement"
  }, {
    "expression" : {
      "operator" : "=",
      "left" : {
        "object" : {
          "name" : "PrecisionUtil",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "MAX_ROBUST_DP_DIGITS",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "right" : {
        "value" : "14",
        "raw" : "14",
        "type" : "Literal"
      },
      "type" : "AssignmentExpression"
    },
    "type" : "ExpressionStatement"
  } ],
  "type" : "Program"
}