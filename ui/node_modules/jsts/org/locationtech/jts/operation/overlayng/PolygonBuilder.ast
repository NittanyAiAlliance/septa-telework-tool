{
  "sourceType" : "module",
  "body" : [ {
    "specifiers" : [ {
      "local" : {
        "name" : "TopologyException",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../geom/TopologyException'",
      "raw" : "'../../geom/TopologyException'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "MaximalEdgeRing",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'./MaximalEdgeRing'",
      "raw" : "'./MaximalEdgeRing'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "ArrayList",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../java/util/ArrayList'",
      "raw" : "'../../../../../java/util/ArrayList'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Assert",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../util/Assert'",
      "raw" : "'../../util/Assert'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "declaration" : {
      "id" : {
        "name" : "PolygonBuilder",
        "type" : "Identifier"
      },
      "body" : {
        "body" : [ {
          "key" : {
            "name" : "constructor",
            "type" : "Identifier"
          },
          "value" : {
            "params" : null,
            "body" : {
              "body" : [ {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "PolygonBuilder",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "object" : {
                        "name" : "constructor_",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "apply",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "type" : "ThisExpression"
                  }, {
                    "name" : "arguments",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "constructor",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "constructor_",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_geometryFactory",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_shellList",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "callee" : {
                      "name" : "ArrayList",
                      "type" : "Identifier"
                    },
                    "arguments" : [ ],
                    "type" : "NewExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_freeHoleList",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "callee" : {
                      "name" : "ArrayList",
                      "type" : "Identifier"
                    },
                    "arguments" : [ ],
                    "type" : "NewExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_isEnforcePolygonal",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : true,
                    "raw" : "true",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "arguments.length",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : 2,
                    "raw" : "2",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "resultAreaEdges",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "object" : {
                          "name" : "arguments",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "value" : 0,
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "type" : "VariableDeclarator"
                    }, {
                      "id" : {
                        "name" : "geomFact",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "object" : {
                          "name" : "arguments",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "value" : 1,
                          "raw" : "1",
                          "type" : "Literal"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "name" : "PolygonBuilder",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "object" : {
                            "name" : "constructor_",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "call",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "type" : "ThisExpression"
                      }, {
                        "name" : "resultAreaEdges",
                        "type" : "Identifier"
                      }, {
                        "name" : "geomFact",
                        "type" : "Identifier"
                      }, {
                        "value" : true,
                        "raw" : "true",
                        "type" : "Literal"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "test" : {
                    "operator" : "===",
                    "left" : {
                      "name" : "arguments.length",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "value" : 3,
                      "raw" : "3",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "consequent" : {
                    "body" : [ {
                      "declarations" : [ {
                        "id" : {
                          "name" : "resultAreaEdges",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 0,
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      }, {
                        "id" : {
                          "name" : "geomFact",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 1,
                            "raw" : "1",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      }, {
                        "id" : {
                          "name" : "isEnforcePolygonal",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 2,
                            "raw" : "2",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "expression" : {
                        "operator" : "=",
                        "left" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_geometryFactory",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "right" : {
                          "name" : "geomFact",
                          "type" : "Identifier"
                        },
                        "type" : "AssignmentExpression"
                      },
                      "type" : "ExpressionStatement"
                    }, {
                      "expression" : {
                        "operator" : "=",
                        "left" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_isEnforcePolygonal",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "right" : {
                          "name" : "isEnforcePolygonal",
                          "type" : "Identifier"
                        },
                        "type" : "AssignmentExpression"
                      },
                      "type" : "ExpressionStatement"
                    }, {
                      "expression" : {
                        "callee" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "buildRings",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "resultAreaEdges",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "ExpressionStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "alternate" : null,
                  "type" : "IfStatement"
                },
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "buildMaximalRings",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "edges",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "edgeRings",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "name" : "ArrayList",
                      "type" : "Identifier"
                    },
                    "arguments" : [ ],
                    "type" : "NewExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "left" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "e",
                      "type" : "Identifier"
                    },
                    "init" : null,
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "const",
                  "type" : "VariableDeclaration"
                },
                "right" : {
                  "name" : "edges",
                  "type" : "Identifier"
                },
                "body" : {
                  "body" : [ {
                    "test" : {
                      "operator" : "&&",
                      "left" : {
                        "callee" : {
                          "object" : {
                            "name" : "e",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "isInResultArea",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "callee" : {
                              "object" : {
                                "name" : "e",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "getLabel",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ ],
                            "type" : "CallExpression"
                          },
                          "property" : {
                            "name" : "isBoundaryEither",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "consequent" : {
                      "body" : [ {
                        "test" : {
                          "operator" : "===",
                          "left" : {
                            "callee" : {
                              "object" : {
                                "name" : "e",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "getEdgeRingMax",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ ],
                            "type" : "CallExpression"
                          },
                          "right" : {
                            "value" : null,
                            "raw" : "null",
                            "type" : "Literal"
                          },
                          "type" : "BinaryExpression"
                        },
                        "consequent" : {
                          "body" : [ {
                            "declarations" : [ {
                              "id" : {
                                "name" : "er",
                                "type" : "Identifier"
                              },
                              "init" : {
                                "callee" : {
                                  "name" : "MaximalEdgeRing",
                                  "type" : "Identifier"
                                },
                                "arguments" : [ {
                                  "name" : "e",
                                  "type" : "Identifier"
                                } ],
                                "type" : "NewExpression"
                              },
                              "type" : "VariableDeclarator"
                            } ],
                            "kind" : "let",
                            "type" : "VariableDeclaration"
                          }, {
                            "expression" : {
                              "callee" : {
                                "object" : {
                                  "name" : "edgeRings",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "add",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ {
                                "name" : "er",
                                "type" : "Identifier"
                              } ],
                              "type" : "CallExpression"
                            },
                            "type" : "ExpressionStatement"
                          } ],
                          "type" : "BlockStatement"
                        },
                        "alternate" : null,
                        "type" : "IfStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForOfStatement"
              }, {
                "argument" : {
                  "name" : "edgeRings",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "assignHoles",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "shell",
              "type" : "Identifier"
            }, {
              "name" : "edgeRings",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "left" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "er",
                      "type" : "Identifier"
                    },
                    "init" : null,
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "const",
                  "type" : "VariableDeclaration"
                },
                "right" : {
                  "name" : "edgeRings",
                  "type" : "Identifier"
                },
                "body" : {
                  "body" : [ {
                    "test" : {
                      "callee" : {
                        "object" : {
                          "name" : "er",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "isHole",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    },
                    "consequent" : {
                      "body" : [ {
                        "expression" : {
                          "callee" : {
                            "object" : {
                              "name" : "er",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "setShell",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "name" : "shell",
                            "type" : "Identifier"
                          } ],
                          "type" : "CallExpression"
                        },
                        "type" : "ExpressionStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForOfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "buildRings",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "resultAreaEdges",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "linkResultAreaEdgesMax",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "resultAreaEdges",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "maxRings",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "PolygonBuilder",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "buildMaximalRings",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "resultAreaEdges",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "buildMinimalRings",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "maxRings",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "placeFreeHoles",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_shellList",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  }, {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_freeHoleList",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "assignShellsAndHoles",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "minRings",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "shell",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "findSingleShell",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "minRings",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "!==",
                  "left" : {
                    "name" : "shell",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "name" : "PolygonBuilder",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "assignHoles",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "shell",
                        "type" : "Identifier"
                      }, {
                        "name" : "minRings",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_shellList",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "property" : {
                          "name" : "add",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "shell",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "body" : [ {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_freeHoleList",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "property" : {
                          "name" : "addAll",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "minRings",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "buildMinimalRings",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "maxRings",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "left" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "erMax",
                      "type" : "Identifier"
                    },
                    "init" : null,
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "const",
                  "type" : "VariableDeclaration"
                },
                "right" : {
                  "name" : "maxRings",
                  "type" : "Identifier"
                },
                "body" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "minRings",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "name" : "erMax",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "buildMinimalRings",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_geometryFactory",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "assignShellsAndHoles",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "minRings",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForOfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "computePolygons",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "shellList",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "resultPolyList",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "name" : "ArrayList",
                      "type" : "Identifier"
                    },
                    "arguments" : [ ],
                    "type" : "NewExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "left" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "er",
                      "type" : "Identifier"
                    },
                    "init" : null,
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "const",
                  "type" : "VariableDeclaration"
                },
                "right" : {
                  "name" : "shellList",
                  "type" : "Identifier"
                },
                "body" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "poly",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "name" : "er",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "toPolygon",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_geometryFactory",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "name" : "resultPolyList",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "add",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "poly",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForOfStatement"
              }, {
                "argument" : {
                  "name" : "resultPolyList",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "findSingleShell",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "edgeRings",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "shellCount",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : "0",
                    "raw" : "0",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "shell",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "left" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "er",
                      "type" : "Identifier"
                    },
                    "init" : null,
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "const",
                  "type" : "VariableDeclaration"
                },
                "right" : {
                  "name" : "edgeRings",
                  "type" : "Identifier"
                },
                "body" : {
                  "body" : [ {
                    "test" : {
                      "operator" : "!",
                      "prefix" : true,
                      "argument" : {
                        "callee" : {
                          "object" : {
                            "name" : "er",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "isHole",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "UnaryExpression"
                    },
                    "consequent" : {
                      "body" : [ {
                        "expression" : {
                          "operator" : "=",
                          "left" : {
                            "name" : "shell",
                            "type" : "Identifier"
                          },
                          "right" : {
                            "name" : "er",
                            "type" : "Identifier"
                          },
                          "type" : "AssignmentExpression"
                        },
                        "type" : "ExpressionStatement"
                      }, {
                        "expression" : {
                          "operator" : "++",
                          "prefix" : false,
                          "argument" : {
                            "name" : "shellCount",
                            "type" : "Identifier"
                          },
                          "type" : "UnaryExpression"
                        },
                        "type" : "ExpressionStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForOfStatement"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "Assert",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "isTrue",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "operator" : "<=",
                    "left" : {
                      "name" : "shellCount",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "value" : "1",
                      "raw" : "1",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  }, {
                    "value" : "found two shells in EdgeRing list",
                    "raw" : "\"found two shells in EdgeRing list\"",
                    "type" : "Literal"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "argument" : {
                  "name" : "shell",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "placeFreeHoles",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "shellList",
              "type" : "Identifier"
            }, {
              "name" : "freeHoleList",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "left" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "hole",
                      "type" : "Identifier"
                    },
                    "init" : null,
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "const",
                  "type" : "VariableDeclaration"
                },
                "right" : {
                  "name" : "freeHoleList",
                  "type" : "Identifier"
                },
                "body" : {
                  "body" : [ {
                    "test" : {
                      "operator" : "===",
                      "left" : {
                        "callee" : {
                          "object" : {
                            "name" : "hole",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getShell",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "right" : {
                        "value" : null,
                        "raw" : "null",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "consequent" : {
                      "body" : [ {
                        "declarations" : [ {
                          "id" : {
                            "name" : "shell",
                            "type" : "Identifier"
                          },
                          "init" : {
                            "callee" : {
                              "object" : {
                                "name" : "hole",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "findEdgeRingContaining",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "shellList",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "VariableDeclarator"
                        } ],
                        "kind" : "let",
                        "type" : "VariableDeclaration"
                      }, {
                        "test" : {
                          "operator" : "&&",
                          "left" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "_isEnforcePolygonal",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "right" : {
                            "operator" : "===",
                            "left" : {
                              "name" : "shell",
                              "type" : "Identifier"
                            },
                            "right" : {
                              "value" : null,
                              "raw" : "null",
                              "type" : "Literal"
                            },
                            "type" : "BinaryExpression"
                          },
                          "type" : "BinaryExpression"
                        },
                        "consequent" : {
                          "body" : [ {
                            "argument" : {
                              "callee" : {
                                "name" : "TopologyException",
                                "type" : "Identifier"
                              },
                              "arguments" : [ {
                                "value" : "unable to assign free hole to a shell",
                                "raw" : "\"unable to assign free hole to a shell\"",
                                "type" : "Literal"
                              }, {
                                "callee" : {
                                  "object" : {
                                    "name" : "hole",
                                    "type" : "Identifier"
                                  },
                                  "property" : {
                                    "name" : "getCoordinate",
                                    "type" : "Identifier"
                                  },
                                  "computed" : false,
                                  "type" : "MemberExpression"
                                },
                                "arguments" : [ ],
                                "type" : "CallExpression"
                              } ],
                              "type" : "NewExpression"
                            },
                            "type" : "ThrowStatement"
                          } ],
                          "type" : "BlockStatement"
                        },
                        "alternate" : null,
                        "type" : "IfStatement"
                      }, {
                        "expression" : {
                          "callee" : {
                            "object" : {
                              "name" : "hole",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "setShell",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "name" : "shell",
                            "type" : "Identifier"
                          } ],
                          "type" : "CallExpression"
                        },
                        "type" : "ExpressionStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForOfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "getShellRings",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_shellList",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "getPolygons",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "callee" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "computePolygons",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_shellList",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "linkResultAreaEdgesMax",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "resultEdges",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "left" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "edge",
                      "type" : "Identifier"
                    },
                    "init" : null,
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "const",
                  "type" : "VariableDeclaration"
                },
                "right" : {
                  "name" : "resultEdges",
                  "type" : "Identifier"
                },
                "body" : {
                  "body" : [ {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "name" : "MaximalEdgeRing",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "linkResultAreaMaxRingAtNode",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "edge",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForOfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        } ],
        "type" : "ClassBody"
      },
      "superClass" : null,
      "type" : "ClassDeclaration"
    },
    "type" : "ExportDefaultDeclaration"
  } ],
  "type" : "Program"
}