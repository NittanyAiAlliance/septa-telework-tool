{
  "sourceType" : "module",
  "body" : [ {
    "specifiers" : [ {
      "local" : {
        "name" : "CoordinateList",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../geom/CoordinateList'",
      "raw" : "'../../geom/CoordinateList'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "hasInterface",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../hasInterface'",
      "raw" : "'../../../../../hasInterface'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Collection",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../java/util/Collection'",
      "raw" : "'../../../../../java/util/Collection'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Noder",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../Noder'",
      "raw" : "'../Noder'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Coordinate",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../geom/Coordinate'",
      "raw" : "'../../geom/Coordinate'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "MCIndexNoder",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../MCIndexNoder'",
      "raw" : "'../MCIndexNoder'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "SnapIntersectionAdder",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'./SnapIntersectionAdder'",
      "raw" : "'./SnapIntersectionAdder'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "NodedSegmentString",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../NodedSegmentString'",
      "raw" : "'../NodedSegmentString'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "HotPixelIndex",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'./HotPixelIndex'",
      "raw" : "'./HotPixelIndex'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "ArrayList",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../java/util/ArrayList'",
      "raw" : "'../../../../../java/util/ArrayList'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "KdNodeVisitor",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../index/kdtree/KdNodeVisitor'",
      "raw" : "'../../index/kdtree/KdNodeVisitor'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "declaration" : {
      "id" : {
        "name" : "FastSnapRounder",
        "type" : "Identifier"
      },
      "body" : {
        "body" : [ {
          "key" : {
            "name" : "constructor",
            "type" : "Identifier"
          },
          "value" : {
            "params" : null,
            "body" : {
              "body" : [ {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "FastSnapRounder",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "object" : {
                        "name" : "constructor_",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "apply",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "type" : "ThisExpression"
                  }, {
                    "name" : "arguments",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "constructor",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "constructor_",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_pm",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_pixelIndex",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_snappedResult",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "pm",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "object" : {
                      "name" : "arguments",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "value" : 0,
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_pm",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "name" : "pm",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_pixelIndex",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "callee" : {
                      "name" : "HotPixelIndex",
                      "type" : "Identifier"
                    },
                    "arguments" : [ {
                      "name" : "pm",
                      "type" : "Identifier"
                    } ],
                    "type" : "NewExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "createNodedStrings",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "segStrings",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "nodedStrings",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "name" : "ArrayList",
                      "type" : "Identifier"
                    },
                    "arguments" : [ ],
                    "type" : "NewExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "left" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "ss",
                      "type" : "Identifier"
                    },
                    "init" : null,
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "const",
                  "type" : "VariableDeclaration"
                },
                "right" : {
                  "name" : "segStrings",
                  "type" : "Identifier"
                },
                "body" : {
                  "body" : [ {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "name" : "nodedStrings",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "add",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "callee" : {
                          "name" : "NodedSegmentString",
                          "type" : "Identifier"
                        },
                        "arguments" : [ {
                          "name" : "ss",
                          "type" : "Identifier"
                        } ],
                        "type" : "NewExpression"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForOfStatement"
              }, {
                "argument" : {
                  "name" : "nodedStrings",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "addVertexPixels",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "segStrings",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "left" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "nss",
                      "type" : "Identifier"
                    },
                    "init" : null,
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "const",
                  "type" : "VariableDeclaration"
                },
                "right" : {
                  "name" : "segStrings",
                  "type" : "Identifier"
                },
                "body" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "pts",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "name" : "nss",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getCoordinates",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_pixelIndex",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "property" : {
                          "name" : "add",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "pts",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForOfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "getNodedSubstrings",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "callee" : {
                    "object" : {
                      "name" : "NodedSegmentString",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "getNodedSubstrings",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_snappedResult",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "snapRound",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "segStrings",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "inputSS",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "FastSnapRounder",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "createNodedStrings",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "segStrings",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "intersections",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "findInteriorIntersections",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "inputSS",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_pixelIndex",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "property" : {
                      "name" : "add",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "intersections",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "addVertexPixels",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "segStrings",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "snapped",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "computeSnaps",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "inputSS",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "argument" : {
                  "name" : "snapped",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "findInteriorIntersections",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "inputSS",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "intAdder",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "name" : "SnapIntersectionAdder",
                      "type" : "Identifier"
                    },
                    "arguments" : [ {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_pm",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    } ],
                    "type" : "NewExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "noder",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "name" : "MCIndexNoder",
                      "type" : "Identifier"
                    },
                    "arguments" : [ ],
                    "type" : "NewExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "noder",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "setSegmentIntersector",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "intAdder",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "noder",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "computeNodes",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "inputSS",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "argument" : {
                  "callee" : {
                    "object" : {
                      "name" : "intAdder",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "getIntersections",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "snapSegment",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "p0",
              "type" : "Identifier"
            }, {
              "name" : "p1",
              "type" : "Identifier"
            }, {
              "name" : "ss",
              "type" : "Identifier"
            }, {
              "name" : "segIndex",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_pixelIndex",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "property" : {
                      "name" : "query",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "p0",
                    "type" : "Identifier"
                  }, {
                    "name" : "p1",
                    "type" : "Identifier"
                  }, {
                    "callee" : {
                      "body" : {
                        "body" : [ {
                          "key" : {
                            "name" : "interfaces_",
                            "type" : "Identifier"
                          },
                          "value" : {
                            "params" : [ ],
                            "body" : {
                              "body" : [ {
                                "argument" : {
                                  "elements" : [ {
                                    "name" : "KdNodeVisitor",
                                    "type" : "Identifier"
                                  } ],
                                  "type" : "ArrayExpression"
                                },
                                "type" : "ReturnStatement"
                              } ],
                              "type" : "BlockStatement"
                            },
                            "generator" : false,
                            "type" : "FunctionExpression"
                          },
                          "kind" : "get",
                          "computed" : false,
                          "static" : false,
                          "type" : "MethodDefinition"
                        }, {
                          "key" : {
                            "name" : "visit",
                            "type" : "Identifier"
                          },
                          "value" : {
                            "params" : [ {
                              "name" : "node",
                              "type" : "Identifier"
                            } ],
                            "body" : {
                              "body" : [ {
                                "declarations" : [ {
                                  "id" : {
                                    "name" : "hp",
                                    "type" : "Identifier"
                                  },
                                  "init" : {
                                    "callee" : {
                                      "object" : {
                                        "name" : "node",
                                        "type" : "Identifier"
                                      },
                                      "property" : {
                                        "name" : "getData",
                                        "type" : "Identifier"
                                      },
                                      "computed" : false,
                                      "type" : "MemberExpression"
                                    },
                                    "arguments" : [ ],
                                    "type" : "CallExpression"
                                  },
                                  "type" : "VariableDeclarator"
                                } ],
                                "kind" : "let",
                                "type" : "VariableDeclaration"
                              }, {
                                "test" : {
                                  "callee" : {
                                    "object" : {
                                      "name" : "hp",
                                      "type" : "Identifier"
                                    },
                                    "property" : {
                                      "name" : "intersects",
                                      "type" : "Identifier"
                                    },
                                    "computed" : false,
                                    "type" : "MemberExpression"
                                  },
                                  "arguments" : [ {
                                    "name" : "p0",
                                    "type" : "Identifier"
                                  }, {
                                    "name" : "p1",
                                    "type" : "Identifier"
                                  } ],
                                  "type" : "CallExpression"
                                },
                                "consequent" : {
                                  "body" : [ {
                                    "expression" : {
                                      "callee" : {
                                        "object" : {
                                          "name" : "ss",
                                          "type" : "Identifier"
                                        },
                                        "property" : {
                                          "name" : "addIntersection",
                                          "type" : "Identifier"
                                        },
                                        "computed" : false,
                                        "type" : "MemberExpression"
                                      },
                                      "arguments" : [ {
                                        "callee" : {
                                          "object" : {
                                            "name" : "hp",
                                            "type" : "Identifier"
                                          },
                                          "property" : {
                                            "name" : "getCoordinate",
                                            "type" : "Identifier"
                                          },
                                          "computed" : false,
                                          "type" : "MemberExpression"
                                        },
                                        "arguments" : [ ],
                                        "type" : "CallExpression"
                                      }, {
                                        "name" : "segIndex",
                                        "type" : "Identifier"
                                      } ],
                                      "type" : "CallExpression"
                                    },
                                    "type" : "ExpressionStatement"
                                  } ],
                                  "type" : "BlockStatement"
                                },
                                "alternate" : null,
                                "type" : "IfStatement"
                              } ],
                              "type" : "BlockStatement"
                            },
                            "generator" : false,
                            "type" : "FunctionExpression"
                          },
                          "kind" : "method",
                          "computed" : false,
                          "static" : false,
                          "type" : "MethodDefinition"
                        } ],
                        "type" : "ClassBody"
                      },
                      "superClass" : null,
                      "type" : "ClassExpression"
                    },
                    "arguments" : [ ],
                    "type" : "NewExpression"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "round",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "instanceof",
                  "left" : {
                    "object" : {
                      "name" : "arguments",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "value" : 0,
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "name" : "Coordinate",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "pt",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "object" : {
                          "name" : "arguments",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "value" : 0,
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "declarations" : [ {
                      "id" : {
                        "name" : "p2",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "name" : "pt",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "copy",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_pm",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "property" : {
                          "name" : "makePrecise",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "p2",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "argument" : {
                      "name" : "p2",
                      "type" : "Identifier"
                    },
                    "type" : "ReturnStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "test" : {
                    "operator" : "instanceof",
                    "left" : {
                      "object" : {
                        "name" : "arguments",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "value" : 0,
                        "raw" : "0",
                        "type" : "Literal"
                      },
                      "computed" : true,
                      "type" : "MemberExpression"
                    },
                    "right" : {
                      "name" : "Array",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "consequent" : {
                    "body" : [ {
                      "declarations" : [ {
                        "id" : {
                          "name" : "pts",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 0,
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "declarations" : [ {
                        "id" : {
                          "name" : "roundPts",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "callee" : {
                            "name" : "CoordinateList",
                            "type" : "Identifier"
                          },
                          "arguments" : [ ],
                          "type" : "NewExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "init" : {
                        "declarations" : [ {
                          "id" : {
                            "name" : "i",
                            "type" : "Identifier"
                          },
                          "init" : {
                            "value" : "0",
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "type" : "VariableDeclarator"
                        } ],
                        "kind" : "let",
                        "type" : "VariableDeclaration"
                      },
                      "test" : {
                        "operator" : "<",
                        "left" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "object" : {
                            "name" : "pts",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "length",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "type" : "BinaryExpression"
                      },
                      "update" : {
                        "operator" : "++",
                        "prefix" : false,
                        "argument" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "type" : "UnaryExpression"
                      },
                      "body" : {
                        "body" : [ {
                          "expression" : {
                            "callee" : {
                              "object" : {
                                "name" : "roundPts",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "add",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "callee" : {
                                "object" : {
                                  "type" : "ThisExpression"
                                },
                                "property" : {
                                  "name" : "round",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ {
                                "object" : {
                                  "name" : "pts",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "i",
                                  "type" : "Identifier"
                                },
                                "computed" : true,
                                "type" : "MemberExpression"
                              } ],
                              "type" : "CallExpression"
                            }, {
                              "value" : false,
                              "raw" : "false",
                              "type" : "Literal"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "ExpressionStatement"
                        } ],
                        "type" : "BlockStatement"
                      },
                      "type" : "ForStatement"
                    }, {
                      "argument" : {
                        "callee" : {
                          "object" : {
                            "name" : "roundPts",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "toCoordinateArray",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "ReturnStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "alternate" : null,
                  "type" : "IfStatement"
                },
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "computeNodes",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "inputSegmentStrings",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_snappedResult",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "callee" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "snapRound",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "inputSegmentStrings",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "computeSnaps",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "callee" : {
                    "name" : "hasInterface",
                    "type" : "Identifier"
                  },
                  "arguments" : [ {
                    "object" : {
                      "name" : "arguments",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "value" : 0,
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  }, {
                    "name" : "Collection",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "segStrings",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "object" : {
                          "name" : "arguments",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "value" : 0,
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "declarations" : [ {
                      "id" : {
                        "name" : "snapped",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "name" : "ArrayList",
                          "type" : "Identifier"
                        },
                        "arguments" : [ ],
                        "type" : "NewExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "left" : {
                      "declarations" : [ {
                        "id" : {
                          "name" : "ss",
                          "type" : "Identifier"
                        },
                        "init" : null,
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "const",
                      "type" : "VariableDeclaration"
                    },
                    "right" : {
                      "name" : "segStrings",
                      "type" : "Identifier"
                    },
                    "body" : {
                      "body" : [ {
                        "declarations" : [ {
                          "id" : {
                            "name" : "snappedSS",
                            "type" : "Identifier"
                          },
                          "init" : {
                            "callee" : {
                              "object" : {
                                "type" : "ThisExpression"
                              },
                              "property" : {
                                "name" : "computeSnaps",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "ss",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "VariableDeclarator"
                        } ],
                        "kind" : "let",
                        "type" : "VariableDeclaration"
                      }, {
                        "test" : {
                          "operator" : "!==",
                          "left" : {
                            "name" : "snappedSS",
                            "type" : "Identifier"
                          },
                          "right" : {
                            "value" : null,
                            "raw" : "null",
                            "type" : "Literal"
                          },
                          "type" : "BinaryExpression"
                        },
                        "consequent" : {
                          "expression" : {
                            "callee" : {
                              "object" : {
                                "name" : "snapped",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "add",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "snappedSS",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "ExpressionStatement"
                        },
                        "alternate" : null,
                        "type" : "IfStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "type" : "ForOfStatement"
                  }, {
                    "argument" : {
                      "name" : "snapped",
                      "type" : "Identifier"
                    },
                    "type" : "ReturnStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "test" : {
                    "operator" : "instanceof",
                    "left" : {
                      "object" : {
                        "name" : "arguments",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "value" : 0,
                        "raw" : "0",
                        "type" : "Literal"
                      },
                      "computed" : true,
                      "type" : "MemberExpression"
                    },
                    "right" : {
                      "name" : "NodedSegmentString",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "consequent" : {
                    "body" : [ {
                      "declarations" : [ {
                        "id" : {
                          "name" : "ss",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 0,
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "declarations" : [ {
                        "id" : {
                          "name" : "pts",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "callee" : {
                            "object" : {
                              "name" : "ss",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "getNodedCoordinates",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ ],
                          "type" : "CallExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "declarations" : [ {
                        "id" : {
                          "name" : "ptsRound",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "callee" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "round",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "name" : "pts",
                            "type" : "Identifier"
                          } ],
                          "type" : "CallExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "test" : {
                        "operator" : "<=",
                        "left" : {
                          "object" : {
                            "name" : "ptsRound",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "length",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "right" : {
                          "value" : "1",
                          "raw" : "1",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "consequent" : {
                        "argument" : {
                          "value" : null,
                          "raw" : "null",
                          "type" : "Literal"
                        },
                        "type" : "ReturnStatement"
                      },
                      "alternate" : null,
                      "type" : "IfStatement"
                    }, {
                      "declarations" : [ {
                        "id" : {
                          "name" : "snapSS",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "callee" : {
                            "name" : "NodedSegmentString",
                            "type" : "Identifier"
                          },
                          "arguments" : [ {
                            "name" : "ptsRound",
                            "type" : "Identifier"
                          }, {
                            "callee" : {
                              "object" : {
                                "name" : "ss",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "getData",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ ],
                            "type" : "CallExpression"
                          } ],
                          "type" : "NewExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "declarations" : [ {
                        "id" : {
                          "name" : "snapSSindex",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "value" : "0",
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "init" : {
                        "declarations" : [ {
                          "id" : {
                            "name" : "i",
                            "type" : "Identifier"
                          },
                          "init" : {
                            "value" : "0",
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "type" : "VariableDeclarator"
                        } ],
                        "kind" : "let",
                        "type" : "VariableDeclaration"
                      },
                      "test" : {
                        "operator" : "<",
                        "left" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "operator" : "-",
                          "left" : {
                            "object" : {
                              "name" : "pts",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "length",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "right" : {
                            "value" : "1",
                            "raw" : "1",
                            "type" : "Literal"
                          },
                          "type" : "BinaryExpression"
                        },
                        "type" : "BinaryExpression"
                      },
                      "update" : {
                        "operator" : "++",
                        "prefix" : false,
                        "argument" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "type" : "UnaryExpression"
                      },
                      "body" : {
                        "body" : [ {
                          "declarations" : [ {
                            "id" : {
                              "name" : "currSnap",
                              "type" : "Identifier"
                            },
                            "init" : {
                              "callee" : {
                                "object" : {
                                  "name" : "snapSS",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "getCoordinate",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ {
                                "name" : "snapSSindex",
                                "type" : "Identifier"
                              } ],
                              "type" : "CallExpression"
                            },
                            "type" : "VariableDeclarator"
                          } ],
                          "kind" : "let",
                          "type" : "VariableDeclaration"
                        }, {
                          "declarations" : [ {
                            "id" : {
                              "name" : "p1",
                              "type" : "Identifier"
                            },
                            "init" : {
                              "object" : {
                                "name" : "pts",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "operator" : "+",
                                "left" : {
                                  "name" : "i",
                                  "type" : "Identifier"
                                },
                                "right" : {
                                  "value" : "1",
                                  "raw" : "1",
                                  "type" : "Literal"
                                },
                                "type" : "BinaryExpression"
                              },
                              "computed" : true,
                              "type" : "MemberExpression"
                            },
                            "type" : "VariableDeclarator"
                          } ],
                          "kind" : "let",
                          "type" : "VariableDeclaration"
                        }, {
                          "declarations" : [ {
                            "id" : {
                              "name" : "p1Round",
                              "type" : "Identifier"
                            },
                            "init" : {
                              "callee" : {
                                "object" : {
                                  "type" : "ThisExpression"
                                },
                                "property" : {
                                  "name" : "round",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ {
                                "name" : "p1",
                                "type" : "Identifier"
                              } ],
                              "type" : "CallExpression"
                            },
                            "type" : "VariableDeclarator"
                          } ],
                          "kind" : "let",
                          "type" : "VariableDeclaration"
                        }, {
                          "test" : {
                            "callee" : {
                              "object" : {
                                "name" : "p1Round",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "equals2D",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "currSnap",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "consequent" : {
                            "label" : null,
                            "type" : "ContinueStatement"
                          },
                          "alternate" : null,
                          "type" : "IfStatement"
                        }, {
                          "declarations" : [ {
                            "id" : {
                              "name" : "p0",
                              "type" : "Identifier"
                            },
                            "init" : {
                              "object" : {
                                "name" : "pts",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "i",
                                "type" : "Identifier"
                              },
                              "computed" : true,
                              "type" : "MemberExpression"
                            },
                            "type" : "VariableDeclarator"
                          } ],
                          "kind" : "let",
                          "type" : "VariableDeclaration"
                        }, {
                          "expression" : {
                            "callee" : {
                              "object" : {
                                "type" : "ThisExpression"
                              },
                              "property" : {
                                "name" : "snapSegment",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "p0",
                              "type" : "Identifier"
                            }, {
                              "name" : "p1",
                              "type" : "Identifier"
                            }, {
                              "name" : "snapSS",
                              "type" : "Identifier"
                            }, {
                              "name" : "snapSSindex",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "ExpressionStatement"
                        }, {
                          "expression" : {
                            "operator" : "++",
                            "prefix" : false,
                            "argument" : {
                              "name" : "snapSSindex",
                              "type" : "Identifier"
                            },
                            "type" : "UnaryExpression"
                          },
                          "type" : "ExpressionStatement"
                        } ],
                        "type" : "BlockStatement"
                      },
                      "type" : "ForStatement"
                    }, {
                      "argument" : {
                        "name" : "snapSS",
                        "type" : "Identifier"
                      },
                      "type" : "ReturnStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "alternate" : null,
                  "type" : "IfStatement"
                },
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "interfaces_",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "elements" : [ {
                    "name" : "Noder",
                    "type" : "Identifier"
                  } ],
                  "type" : "ArrayExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "get",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        } ],
        "type" : "ClassBody"
      },
      "superClass" : null,
      "type" : "ClassDeclaration"
    },
    "type" : "ExportDefaultDeclaration"
  } ],
  "type" : "Program"
}