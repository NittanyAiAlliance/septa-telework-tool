{
  "sourceType" : "module",
  "body" : [ {
    "specifiers" : [ {
      "local" : {
        "name" : "hasInterface",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../hasInterface'",
      "raw" : "'../../../../../hasInterface'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Coordinate",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../geom/Coordinate'",
      "raw" : "'../../geom/Coordinate'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "HotPixel",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'./HotPixel'",
      "raw" : "'./HotPixel'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "KdTree",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../index/kdtree/KdTree'",
      "raw" : "'../../index/kdtree/KdTree'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Envelope",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../geom/Envelope'",
      "raw" : "'../../geom/Envelope'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "List",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../java/util/List'",
      "raw" : "'../../../../../java/util/List'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "declaration" : {
      "id" : {
        "name" : "HotPixelIndex",
        "type" : "Identifier"
      },
      "body" : {
        "body" : [ {
          "key" : {
            "name" : "constructor",
            "type" : "Identifier"
          },
          "value" : {
            "params" : null,
            "body" : {
              "body" : [ {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "HotPixelIndex",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "object" : {
                        "name" : "constructor_",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "apply",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "type" : "ThisExpression"
                  }, {
                    "name" : "arguments",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "constructor",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "constructor_",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_precModel",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_scaleFactor",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_index",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "callee" : {
                      "name" : "KdTree",
                      "type" : "Identifier"
                    },
                    "arguments" : [ ],
                    "type" : "NewExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "pm",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "object" : {
                      "name" : "arguments",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "value" : 0,
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_precModel",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "name" : "pm",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_scaleFactor",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "callee" : {
                      "object" : {
                        "name" : "pm",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "getScale",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "round",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "pt",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "p2",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "pt",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "copy",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_precModel",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "property" : {
                      "name" : "makePrecise",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "p2",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "argument" : {
                  "name" : "p2",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "find",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "pixelPt",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "kdNode",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_index",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "property" : {
                        "name" : "query",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "pixelPt",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "kdNode",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "callee" : {
                    "object" : {
                      "name" : "kdNode",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "getData",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "add",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "instanceof",
                  "left" : {
                    "object" : {
                      "name" : "arguments",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "value" : 0,
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "name" : "Array",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "pts",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "object" : {
                          "name" : "arguments",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "value" : 0,
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "left" : {
                      "declarations" : [ {
                        "id" : {
                          "name" : "pt",
                          "type" : "Identifier"
                        },
                        "init" : null,
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "const",
                      "type" : "VariableDeclaration"
                    },
                    "right" : {
                      "name" : "pts",
                      "type" : "Identifier"
                    },
                    "body" : {
                      "body" : [ {
                        "expression" : {
                          "callee" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "add",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "name" : "pt",
                            "type" : "Identifier"
                          } ],
                          "type" : "CallExpression"
                        },
                        "type" : "ExpressionStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "type" : "ForOfStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "test" : {
                    "callee" : {
                      "name" : "hasInterface",
                      "type" : "Identifier"
                    },
                    "arguments" : [ {
                      "object" : {
                        "name" : "arguments",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "value" : 0,
                        "raw" : "0",
                        "type" : "Literal"
                      },
                      "computed" : true,
                      "type" : "MemberExpression"
                    }, {
                      "name" : "List",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "consequent" : {
                    "body" : [ {
                      "declarations" : [ {
                        "id" : {
                          "name" : "pts",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 0,
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "left" : {
                        "declarations" : [ {
                          "id" : {
                            "name" : "pt",
                            "type" : "Identifier"
                          },
                          "init" : null,
                          "type" : "VariableDeclarator"
                        } ],
                        "kind" : "const",
                        "type" : "VariableDeclaration"
                      },
                      "right" : {
                        "name" : "pts",
                        "type" : "Identifier"
                      },
                      "body" : {
                        "body" : [ {
                          "expression" : {
                            "callee" : {
                              "object" : {
                                "type" : "ThisExpression"
                              },
                              "property" : {
                                "name" : "add",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "pt",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "ExpressionStatement"
                        } ],
                        "type" : "BlockStatement"
                      },
                      "type" : "ForOfStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "alternate" : {
                    "test" : {
                      "operator" : "instanceof",
                      "left" : {
                        "object" : {
                          "name" : "arguments",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "value" : 0,
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "right" : {
                        "name" : "Coordinate",
                        "type" : "Identifier"
                      },
                      "type" : "BinaryExpression"
                    },
                    "consequent" : {
                      "body" : [ {
                        "declarations" : [ {
                          "id" : {
                            "name" : "p",
                            "type" : "Identifier"
                          },
                          "init" : {
                            "object" : {
                              "name" : "arguments",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "value" : 0,
                              "raw" : "0",
                              "type" : "Literal"
                            },
                            "computed" : true,
                            "type" : "MemberExpression"
                          },
                          "type" : "VariableDeclarator"
                        } ],
                        "kind" : "let",
                        "type" : "VariableDeclaration"
                      }, {
                        "declarations" : [ {
                          "id" : {
                            "name" : "pRound",
                            "type" : "Identifier"
                          },
                          "init" : {
                            "callee" : {
                              "object" : {
                                "type" : "ThisExpression"
                              },
                              "property" : {
                                "name" : "round",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "p",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "VariableDeclarator"
                        } ],
                        "kind" : "let",
                        "type" : "VariableDeclaration"
                      }, {
                        "declarations" : [ {
                          "id" : {
                            "name" : "hp",
                            "type" : "Identifier"
                          },
                          "init" : {
                            "callee" : {
                              "object" : {
                                "type" : "ThisExpression"
                              },
                              "property" : {
                                "name" : "find",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "p",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "VariableDeclarator"
                        } ],
                        "kind" : "let",
                        "type" : "VariableDeclaration"
                      }, {
                        "test" : {
                          "operator" : "!==",
                          "left" : {
                            "name" : "hp",
                            "type" : "Identifier"
                          },
                          "right" : {
                            "value" : null,
                            "raw" : "null",
                            "type" : "Literal"
                          },
                          "type" : "BinaryExpression"
                        },
                        "consequent" : {
                          "argument" : {
                            "name" : "hp",
                            "type" : "Identifier"
                          },
                          "type" : "ReturnStatement"
                        },
                        "alternate" : null,
                        "type" : "IfStatement"
                      }, {
                        "expression" : {
                          "operator" : "=",
                          "left" : {
                            "name" : "hp",
                            "type" : "Identifier"
                          },
                          "right" : {
                            "callee" : {
                              "name" : "HotPixel",
                              "type" : "Identifier"
                            },
                            "arguments" : [ {
                              "name" : "pRound",
                              "type" : "Identifier"
                            }, {
                              "object" : {
                                "type" : "ThisExpression"
                              },
                              "property" : {
                                "name" : "_scaleFactor",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            } ],
                            "type" : "NewExpression"
                          },
                          "type" : "AssignmentExpression"
                        },
                        "type" : "ExpressionStatement"
                      }, {
                        "expression" : {
                          "callee" : {
                            "object" : {
                              "object" : {
                                "type" : "ThisExpression"
                              },
                              "property" : {
                                "name" : "_index",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "property" : {
                              "name" : "insert",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "callee" : {
                              "object" : {
                                "name" : "hp",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "getCoordinate",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ ],
                            "type" : "CallExpression"
                          }, {
                            "name" : "hp",
                            "type" : "Identifier"
                          } ],
                          "type" : "CallExpression"
                        },
                        "type" : "ExpressionStatement"
                      }, {
                        "argument" : {
                          "name" : "hp",
                          "type" : "Identifier"
                        },
                        "type" : "ReturnStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  },
                  "type" : "IfStatement"
                },
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "query",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "p0",
              "type" : "Identifier"
            }, {
              "name" : "p1",
              "type" : "Identifier"
            }, {
              "name" : "visitor",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "queryEnv",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "name" : "Envelope",
                      "type" : "Identifier"
                    },
                    "arguments" : [ {
                      "name" : "p0",
                      "type" : "Identifier"
                    }, {
                      "name" : "p1",
                      "type" : "Identifier"
                    } ],
                    "type" : "NewExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "queryEnv",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "expandBy",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "operator" : "/",
                    "left" : {
                      "value" : "1.0",
                      "raw" : "1.0",
                      "type" : "Literal"
                    },
                    "right" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_scaleFactor",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "type" : "BinaryExpression"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_index",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "property" : {
                      "name" : "query",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "queryEnv",
                    "type" : "Identifier"
                  }, {
                    "name" : "visitor",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        } ],
        "type" : "ClassBody"
      },
      "superClass" : null,
      "type" : "ClassDeclaration"
    },
    "type" : "ExportDefaultDeclaration"
  } ],
  "type" : "Program"
}